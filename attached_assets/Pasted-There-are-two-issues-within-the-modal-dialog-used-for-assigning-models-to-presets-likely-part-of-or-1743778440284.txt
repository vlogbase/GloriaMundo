There are two issues within the modal dialog used for assigning models to presets (likely part of or called by `ModelPresets.tsx`):

1.  **Free Models Not Identified:** The modal currently shows "No free models found". This needs to be fixed by using the pricing data provided by OpenRouter.
2.  **Search Input Doesn't Filter:** Typing in the "Search free models" input (and any similar search input for paid models) doesn't filter the list of models displayed below it in real-time.

Please implement the following fixes:

**1. Backend - Ensure Pricing Data:**
   a.  Verify that the backend route `GET /api/openrouter/models` fetches the full model details from OpenRouter, including the `pricing` object (which contains costs like `prompt`, `completion`).
   b.  Ensure this `pricing` object for each model is included in the JSON response sent back to the frontend.

**2. Frontend - Use Pricing Data for Filtering:**
   a.  In the model assignment modal component, when receiving the list of models from the backend, use the included `pricing` data for each model.
   b.  Identify models where both input (`pricing.prompt`) and output (`pricing.completion`) costs are zero (or very close to zero, e.g., less than $0.000001 per million tokens, check how OpenRouter represents free tier pricing).
   c.  Display these identified models correctly in the "Free Models" section of the modal.
   d.  Display models with non-zero costs in the appropriate section (e.g., a separate "Paid Models" list or integrated into the main list).

**3. Frontend - Implement Live Search Filtering:**
   a.  In the model assignment modal component, add state to store the current text entered into the search input field(s).
   b.  Attach an `onChange` event handler to the search input field(s). When the input value changes, update the search term state.
   c.  Before rendering the list(s) of models (both free and paid sections if separated), filter the full list based on the current search term state. The filtering logic should check if the model's `name` or `id` contains the search term (case-insensitive comparison is best).
   d.  Render only the models that match the current search filter. The list should update dynamically as the user types into the search box.

Please apply these changes to ensure free models are correctly identified and listed, and that the search inputs provide live filtering of the model lists within the assignment modal.