Based on the attached Lighthouse report gloriamundo.com-2025030… and the console errors you’re seeing, here are the recommendations:

Preload Tag Warning:
• The <link rel="preload"> is using an unsupported type attribute. Instead, remove the type attribute and ensure you use the proper as attribute (e.g. as="image" if preloading an image).
• Also, if the preloaded resource (gm-logo.png) isn’t used immediately after load, either remove the preload tag or adjust your code so it’s applied early in the rendering process.

Deprecated Meta Tag:
• The <meta name="apple-mobile-web-app-capable" content="yes"> tag is deprecated. Update it by using <meta name="mobile-web-app-capable" content="yes">. You may include both if you need to support older iOS versions, but note the warning for future compatibility.

PWA Install Banner:
• The error about the install banner not showing is because the app is calling beforeinstallpromptevent.preventDefault().
• If you want the banner to appear, remove or adjust that call so that you call beforeinstallpromptevent.prompt() at the appropriate time. If you intentionally want to suppress the banner, you can ignore this warning.

Service Worker Messaging Errors:
• The “Unchecked runtime.lastError: The message port closed before a response was received” errors suggest that some messages sent to your service worker don’t receive a reply.
• Review your service worker messaging code and add proper error handling (or ensure that responses are sent) to avoid these warnings.

Caching Critical Assets:
• The log in service-worker.js about caching additional assets is informational, but double-check that your caching strategy isn’t interfering with resource delivery (especially if it impacts the LCP).

Overall:
You should not revert your optimizations—instead, adjust these implementation details. Correcting the preload attributes and meta tag, properly handling the install banner prompt, and addressing service worker messaging will help reduce warnings and may indirectly improve performance. However, note that your FCP and LCP are still higher than desired (FCP ~6.0 s and LCP ~21.0 s), so you might need to further optimize resource loading (e.g., compressing images, minifying code, and deferring non-critical scripts) to improve these metrics.

These changes should refine your implementation without undoing the performance improvements already made.