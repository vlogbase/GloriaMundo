Okay, let's focus on the frontend UI for the credit system now. Please implement the following changes:

**1. Fetch User Balance:**
    * Ensure the user's authentication state/hook (likely fetching from `/api/auth/me`) includes the `creditBalance` field (the integer value representing hundredths of cents). Make this balance available to the necessary UI components.

**2. Display Balance in Header:**
    * **Locate Component:** Find the component rendering the top-right header area, likely where the dark mode switch and existing `AuthButtons.tsx` (or user dropdown) reside.
    * **Conditional Display:** Only show the balance if the user is logged in. If logged out, the existing "Sign in" button should show.
    * **Formatting:**
        * Retrieve the integer `creditBalance`.
        * Convert it to a dollar amount: `dollarAmount = creditBalance / 10000;`
        * Format it for display, e.g., using 2 or 4 decimal places: `displayBalance = dollarAmount.toFixed(4);` (adjust decimals as desired, e.g., `toFixed(2)`).
        * Prepend the currency symbol: `'$' + displayBalance` (or 'Â£' if preferred for UK).
    * **UI Element:** Create a new clickable element (e.g., a styled `Button` or `Link` from `wouter`) to display this formatted balance string (e.g., "Credit: $4.9876").
    * **Conditional Styling:** If `dollarAmount < 0.50`, apply a distinct style (e.g., red text color using Tailwind classes like `text-red-600`) and append the text " Top Up" to the displayed string (e.g., "Credit: $0.3120 Top Up").
    * **Link:** Make this entire element navigate to the `/credits` page when clicked.
    * **Positioning:** Place this new element appropriately in the header, likely near the dark mode switch or user avatar/logout button. Ensure the layout remains clean.

**3. Link in Footer:**
    * **Locate Component:** Find the main application footer component.
    * **Conditional Link:** Add a link to the `/credits` page (e.g., text "Account / Credits"). This link should only be visible/rendered if the user is logged in.

**4. Basic Credits Page:**
    * **Verify Route:** Ensure the route for `/credits` pointing to `CreditsPage.tsx` is correctly configured in `client/src/App.tsx`.
    * **Display Balance:** Modify `client/src/pages/CreditsPage.tsx` to fetch and display the user's current balance (formatted as dollars, similar to the header).
    * **Placeholder:** For now, it can just display the balance and perhaps the placeholder text/buttons for PayPal that the agent might have already started adding. We will implement the full PayPal button logic later.

Please implement these frontend changes for displaying the user's balance and linking to the credits page, ensuring they only appear for logged-in users.